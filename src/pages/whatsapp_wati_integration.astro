---
import Layout from "../layouts/Layout.astro";
import "../styles.css";
import { Image, Picture } from "@astrojs/image/components";

import whatsapp_logo from "../../public/Images/whatsapp_logo.svg";
import setup from "../../public/Images/setup.svg";
import whatsapp_workspace from "../../public/Images/whatsapp_workspace.svg";
import whatsapp_template from "../../public/Images/whatsapp_template.svg";
import individual_lead from "../../public/Images/individual_lead.svg";
import individual_lead_1 from "../../public/Images/individual_lead_1.svg";
import chat_history from "../../public/Images/chat_history.svg";
import template_button from "../../public/Images/template_button.svg";
import dialog_box from "../../public/Images/dialog_box.svg";
import dynamic_data from "../../public/Images/dynamic_data.svg";
import send_template from "../../public/Images/send_template.svg";
import chat_box from "../../public/Images/chat_box.svg";
import action_button from "../../public/Images/action_button.svg";
import send_whatsapp_template from "../../public/Images/send_whatsapp_template.svg";
import template_dialog_box from "../../public/Images/template_dialog_box.svg";
import send_session_message from "../../public/Images/send_session_message.svg";
import send_session_message_1 from "../../public/Images/send_session_message_1.svg";
import whatsapp_message_log from "../../public/Images/whatsapp_message_log.svg";
import whatsapp_message_log_1 from "../../public/Images/whatsapp_message_log_1.svg";
import bulk_message_logs from "../../public/Images/bulk_message_logs.svg";
import bulk_message_logs_1 from "../../public/Images/bulk_message_logs_1.svg";

import right_arrow from "../../public/Images/right-arrow.svg";
import down_arrow from "../../public/Images/down_arrow.svg";
import up_arrow from "../../public/Images/up_arrow.svg";
---

<Layout
  title="WhatsApp Wati App | Sanskar Technolab"
  ,
  keyword="WhatsApp Wati App, WhatsApp CRM Integration, WhatsApp Business API, WhatsApp follow-up system, customer communication app, WhatsApp messaging app, CRM WhatsApp integration, WhatsApp ERPNext integration, WhatsApp automation, WhatsApp for business"
  ,
  description="Sanskar Technolab provides seamless WhatsApp Wati App integration for businesses, enhancing customer communication through WhatsApp."
  ,
  canonical_href="https://sanskartechnolab.com/whatsapp_wati_app"
>
  <body>
    <!-- Follow-Up Management Start -->
    <section class="banner-bg">
      <div
        class="mx-5 md:max-w-7xl md:mx-auto md:px-24 py-[2rem] md:py-[2rem] lg:py-[4rem]"
      >
        <!-- <div
          class="max-w-[450px] flex flex-row items-center rounded-xl p-3 gap-2"
        >
          <Image loading="lazy" src={whatsapp_logo} alt="whatsapp_logo" />
          <div class="text-[#4D4C4D]">
            <p class="text-sm md:text-base">Frappe App</p>
            <h4 class="text-xl md:text-2xl lg:text-3xl font-semibold">
                WhatsApp Wati App
            </h4>
          </div>
        </div> -->
        <div class="grid lg:grid-cols-10 grid-cols-1">
          <div class="lg:col-span-6 col-span-1 flex items-center">
            <h1 class="lg:text-4xl md:text-3xl text-xl font-bold text-[#31393C]">WhatsApp Wati ERPNext Integration</h1>
          </div>
          <div class="lg:col-span-4 flex flex-row items-center lg:justify-end rounded-xl gap-2 lg:mt-0 md:mt-8 mt-4 ">
           <Image loading="lazy" src={whatsapp_logo} alt="whatsapp_logo" />
          <div class="text-[#4D4C4D]">
            <p class="text-sm md:text-base">Frappe App</p>
            <h2 class="text-xl md:text-2xl lg:text-2xl font-semibold">
                WhatsApp Wati App
            </h2>
          </div>
          </div>
        </div>
        <iframe
          class="w-full lg:h-[39rem] md:h-[25rem] h-60 mt-5"
          src="https://www.youtube.com/embed/vzffbaXE54c"
          title="YouTube Video"
          allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
          loading="lazy"
          allowfullscreen></iframe>
        <!-- <iframe width="560" height="315" src="https://www.youtube.com/embed/OfXCC3xudjA?si=okYJiZOlY7EK_Iqc" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe> -->
      </div>
    </section>

    <div
      class="w-full toggle-menu fixed top-24 z-10 settop bg-[#92C9FF] !md:hidden text-[#31393C]"
      id="tablecontentmenu"
    >
      <p class="text-center font-semibold p-5">Table of Contents</p>
      <ul id="mobile-menu" class="menu-hidden text-center">
  
        <li class="border-b-2 p-2"><a href="#introduction">Introduction</a></li>
        <li class="border-b-2 p-2"><a href="#key_features">Key Features</a></li>
        <li class="border-b-2 p-2">
          <a href="#Prerequisites">Prerequisites</a>
        </li>
        <li class="border-b-2 p-2"><a href="#setup">Setup</a></li>
        <li class="border-b-2 p-2"><a href="#workspace">Workspace</a></li>
        <li class="border-b-2 p-2">
          <a href="#process">Process</a>
        </li>
        <li class="border-b-2 p-2">
          <a href="#send_session_message">Send Session Message</a>
        </li>
        <li class="border-b-2 p-2">
          <a href="#whatsapp_individual_message_logs"
            >WhatsApp Individual Message Logs</a>
        </li>
        <li class="border-b-2 p-2">
          <a href="#whatsapp_bulk_message_logs">WhatsApp Bulk Message Logs</a>
        </li>
        <li class="border-b-2 p-2"><a href="#support">Support</a></li>
        <li class="p-2"><a href="#faq">FAQ</a></li>

        

      </ul>
    </div>

    <!-- Table of Contents Start -->
    <section
      class="grid grid-cols-12 md:max-w-7xl md:mx-auto px-5 sm:px-12 md:px-24 py-[2rem] md:py-[2rem] lg:py-[4rem] w-full gap-5 lg:gap-10"
      id="tablecontent"
    >
      <div
        class="self-start sticky top-24 md:col-span-3 js-toc toc overflow-x-auto max-md:hidden"
      >
        <h2
          class="text-[#31393C] text-sm md:text-base lg:text-lg font-semibold border-b-2 px-5 py-2"
        >
          Table of Contents
        </h2>
        <a
        class="flex gap-2 items-center border-b-2 border-dotted px-5 py-2 button"
        href="#introduction"
      >
        <svg
          width="10"
          height="11"
          viewBox="0 0 10 11"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          id="vectorImage"
        >
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M5 9C6.933 9 8.5 7.433 8.5 5.5C8.5 3.567 6.933 2 5 2C3.067 2 1.5 3.567 1.5 5.5C1.5 7.433 3.067 9 5 9ZM5 10.5C7.76142 10.5 10 8.26142 10 5.5C10 2.73858 7.76142 0.5 5 0.5C2.23858 0.5 0 2.73858 0 5.5C0 8.26142 2.23858 10.5 5 10.5Z"
            fill="#727578"></path>
          <path d="M7 5.5L4 7.23205V3.76794L7 5.5Z" fill="#727578"></path>
        </svg>
        <h2 class="text-[#31393C] text-sm font-semibold">Inroduction</h2>
      </a>

      <a
        class="flex gap-2 items-center border-b-2 border-dotted px-5 py-2 button"
        href="#key_features"
      >
        <svg
          width="10"
          height="11"
          viewBox="0 0 10 11"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          id="vectorImage"
        >
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M5 9C6.933 9 8.5 7.433 8.5 5.5C8.5 3.567 6.933 2 5 2C3.067 2 1.5 3.567 1.5 5.5C1.5 7.433 3.067 9 5 9ZM5 10.5C7.76142 10.5 10 8.26142 10 5.5C10 2.73858 7.76142 0.5 5 0.5C2.23858 0.5 0 2.73858 0 5.5C0 8.26142 2.23858 10.5 5 10.5Z"
            fill="#727578"></path>
          <path d="M7 5.5L4 7.23205V3.76794L7 5.5Z" fill="#727578"></path>
        </svg>
        <h2 class="text-[#31393C] text-sm font-semibold">Key Features</h2>
      </a>

      <a
        class="flex gap-2 items-center border-b-2 border-dotted px-5 py-2 button"
        href="#prerequisites"
      >
        <svg
          width="10"
          height="11"
          viewBox="0 0 10 11"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          id="vectorImage"
        >
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M5 9C6.933 9 8.5 7.433 8.5 5.5C8.5 3.567 6.933 2 5 2C3.067 2 1.5 3.567 1.5 5.5C1.5 7.433 3.067 9 5 9ZM5 10.5C7.76142 10.5 10 8.26142 10 5.5C10 2.73858 7.76142 0.5 5 0.5C2.23858 0.5 0 2.73858 0 5.5C0 8.26142 2.23858 10.5 5 10.5Z"
            fill="#727578"></path>
          <path d="M7 5.5L4 7.23205V3.76794L7 5.5Z" fill="#727578"></path>
        </svg>
        <h2 class="text-[#31393C] text-sm font-semibold">Prerequisites</h2>
      </a>

      <a
        class="flex gap-2 items-center border-b-2 border-dotted px-5 py-2 button"
        href="#setup"
      >
        <svg
          width="10"
          height="11"
          viewBox="0 0 10 11"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          id="vectorImage"
        >
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M5 9C6.933 9 8.5 7.433 8.5 5.5C8.5 3.567 6.933 2 5 2C3.067 2 1.5 3.567 1.5 5.5C1.5 7.433 3.067 9 5 9ZM5 10.5C7.76142 10.5 10 8.26142 10 5.5C10 2.73858 7.76142 0.5 5 0.5C2.23858 0.5 0 2.73858 0 5.5C0 8.26142 2.23858 10.5 5 10.5Z"
            fill="#727578"></path>
          <path d="M7 5.5L4 7.23205V3.76794L7 5.5Z" fill="#727578"></path>
        </svg>
        <h2 class="text-[#31393C] text-sm font-semibold">Setup</h2>
      </a>
      <a
        class="flex gap-2 items-center border-b-2 border-dotted px-5 py-2 button"
        href="#workspace"
      >
        <svg
          width="10"
          height="11"
          viewBox="0 0 10 11"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          id="vectorImage"
        >
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M5 9C6.933 9 8.5 7.433 8.5 5.5C8.5 3.567 6.933 2 5 2C3.067 2 1.5 3.567 1.5 5.5C1.5 7.433 3.067 9 5 9ZM5 10.5C7.76142 10.5 10 8.26142 10 5.5C10 2.73858 7.76142 0.5 5 0.5C2.23858 0.5 0 2.73858 0 5.5C0 8.26142 2.23858 10.5 5 10.5Z"
            fill="#727578"></path>
          <path d="M7 5.5L4 7.23205V3.76794L7 5.5Z" fill="#727578"></path>
        </svg>
        <h2 class="text-[#31393C] text-sm font-semibold">Workspace</h2>
      </a>

      <a
        class="flex gap-2 items-center border-b-2 border-dotted px-5 py-2 button"
        href="#process"
      >
        <svg
          width="10"
          height="11"
          viewBox="0 0 10 11"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          id="vectorImage"
        >
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M5 9C6.933 9 8.5 7.433 8.5 5.5C8.5 3.567 6.933 2 5 2C3.067 2 1.5 3.567 1.5 5.5C1.5 7.433 3.067 9 5 9ZM5 10.5C7.76142 10.5 10 8.26142 10 5.5C10 2.73858 7.76142 0.5 5 0.5C2.23858 0.5 0 2.73858 0 5.5C0 8.26142 2.23858 10.5 5 10.5Z"
            fill="#727578"></path>
          <path d="M7 5.5L4 7.23205V3.76794L7 5.5Z" fill="#727578"></path>
        </svg>
        <h2 class="text-[#31393C] text-sm font-semibold">
          Process
        </h2>
      </a>

      <a
        class="flex gap-2 items-center border-b-2 border-dotted px-5 py-2 button"
        href="#send_session_message"
      >
        <svg
          width="10"
          height="11"
          viewBox="0 0 10 11"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          id="vectorImage"
        >
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M5 9C6.933 9 8.5 7.433 8.5 5.5C8.5 3.567 6.933 2 5 2C3.067 2 1.5 3.567 1.5 5.5C1.5 7.433 3.067 9 5 9ZM5 10.5C7.76142 10.5 10 8.26142 10 5.5C10 2.73858 7.76142 0.5 5 0.5C2.23858 0.5 0 2.73858 0 5.5C0 8.26142 2.23858 10.5 5 10.5Z"
            fill="#727578"></path>
          <path d="M7 5.5L4 7.23205V3.76794L7 5.5Z" fill="#727578"></path>
        </svg>
        <h2 class="text-[#31393C] text-sm font-semibold">
          Send Session Message
        </h2>
      </a>

      <a
        class="flex gap-2 items-center border-b-2 border-dotted px-5 py-2 button"
        href="#whatsapp_individual_message_logs"
      >
        <svg
          width="10"
          height="11"
          viewBox="0 0 10 11"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          id="vectorImage"
        >
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M5 9C6.933 9 8.5 7.433 8.5 5.5C8.5 3.567 6.933 2 5 2C3.067 2 1.5 3.567 1.5 5.5C1.5 7.433 3.067 9 5 9ZM5 10.5C7.76142 10.5 10 8.26142 10 5.5C10 2.73858 7.76142 0.5 5 0.5C2.23858 0.5 0 2.73858 0 5.5C0 8.26142 2.23858 10.5 5 10.5Z"
            fill="#727578"></path>
          <path d="M7 5.5L4 7.23205V3.76794L7 5.5Z" fill="#727578"></path>
        </svg>
        <h2 class="text-[#31393C] text-sm font-semibold">
          WhatsApp Individual Message Logs
        </h2>
      </a>

      <a
        class="flex gap-2 items-center border-b-2 border-dotted px-5 py-2 button"
        href="#whatsapp_bulk_message_logs"
      >
        <svg
          width="10"
          height="11"
          viewBox="0 0 10 11"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          id="vectorImage"
        >
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M5 9C6.933 9 8.5 7.433 8.5 5.5C8.5 3.567 6.933 2 5 2C3.067 2 1.5 3.567 1.5 5.5C1.5 7.433 3.067 9 5 9ZM5 10.5C7.76142 10.5 10 8.26142 10 5.5C10 2.73858 7.76142 0.5 5 0.5C2.23858 0.5 0 2.73858 0 5.5C0 8.26142 2.23858 10.5 5 10.5Z"
            fill="#727578"></path>
          <path d="M7 5.5L4 7.23205V3.76794L7 5.5Z" fill="#727578"></path>
        </svg>
        <h2 class="text-[#31393C] text-sm font-semibold">
          WhatsApp Bulk Message Logs
        </h2>
      </a>





        <a
          class="flex gap-2 items-center border-b-2 border-dotted px-5 py-2 button"
          href="#support"
        >
          <svg
            width="10"
            height="11"
            viewBox="0 0 10 11"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            id="vectorImage"
          >
            <path
              fill-rule="evenodd"
              clip-rule="evenodd"
              d="M5 9C6.933 9 8.5 7.433 8.5 5.5C8.5 3.567 6.933 2 5 2C3.067 2 1.5 3.567 1.5 5.5C1.5 7.433 3.067 9 5 9ZM5 10.5C7.76142 10.5 10 8.26142 10 5.5C10 2.73858 7.76142 0.5 5 0.5C2.23858 0.5 0 2.73858 0 5.5C0 8.26142 2.23858 10.5 5 10.5Z"
              fill="#727578"></path>
            <path d="M7 5.5L4 7.23205V3.76794L7 5.5Z" fill="#727578"></path>
          </svg>
          <h2 class="text-[#31393C] text-sm font-semibold">Support</h2>
        </a>
        <a
          class="flex gap-2 items-center border-b-2 border-dotted px-5 py-2 button"
          href="#faq"
        >
          <svg
            width="10"
            height="11"
            viewBox="0 0 10 11"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            id="vectorImage"
          >
            <path
              fill-rule="evenodd"
              clip-rule="evenodd"
              d="M5 9C6.933 9 8.5 7.433 8.5 5.5C8.5 3.567 6.933 2 5 2C3.067 2 1.5 3.567 1.5 5.5C1.5 7.433 3.067 9 5 9ZM5 10.5C7.76142 10.5 10 8.26142 10 5.5C10 2.73858 7.76142 0.5 5 0.5C2.23858 0.5 0 2.73858 0 5.5C0 8.26142 2.23858 10.5 5 10.5Z"
              fill="#727578"></path>
            <path d="M7 5.5L4 7.23205V3.76794L7 5.5Z" fill="#727578"></path>
          </svg>
          <h2 class="text-[#31393C] text-sm font-semibold">FAQ</h2>
        </a>
      </div>



      <div
        class="rounded-xl border p-4 lg:p-8 shadow-box col-span-12 md:col-span-9"
      >
        <div>
          <h2
            class="text-[#3E96F4] text-lg md:text-xl lg:text-2xl font-semibold"
            id="introduction"
          >
            Introduction
          </h2>
          <p class="mt-3 text-sm md:text-base text-[#31393C]">
            Our WhatsApp integration product helps businesses seamlessly integrate their ERPNEXT system with WhatsApp. WhatsApp has become a crucial part of businesses, to stay connected with customers and offer them a customized user experience. To make it happen, our integration product is all you need.
          </p>
        </div>
        
        <div class="mt-5 lg:mt-10">
          <h2
            class="text-[#3E96F4] text-lg md:text-xl lg:text-2xl font-semibold"
            id="key_features"
          >
            Key Features
          </h2>
          <ul class="list-disc ml-7 text-sm md:text-base text-[#31393C]">
            <li class="mt-5">Hassle-free integration with WhatsApp API.</li>
            <li class="mt-2">
                Dynamically create WhatsApp templates to send personalized messages.
            </li>
            <li class="mt-2">
                Businesses can review an end-to-end user activity.
            </li>
            <li class="mt-2">
                Instant notifications to keep you updated.
            </li>
            <li class="mt-2">
                Feature to send multiple & individual messages.
            </li>
          </ul>
        </div>

        <div class="mt-5 lg:mt-10">
            <h2
              class="text-[#3E96F4] text-lg md:text-xl lg:text-2xl font-semibold"
              id="prerequisites"
            >
            Prerequisites
            </h2>
            <ul class="list-disc ml-7 text-sm md:text-base text-[#31393C]">
              <li class="mt-5">Account on WATI</li>
              <li class="mt-2">
                WATI configuration
              </li>
              <li class="mt-2">
                Access token & API for WATI
              </li>
            </ul>
          </div>

        <!-- Setup Start  -->
        <div class="mt-5 lg:mt-10">
            <h2
              class="text-[#3E96F4] text-lg md:text-xl lg:text-2xl font-semibold"
              id="setup"
            >
             Setup
            </h2>
            <p class="text-sm md:text-base mt-6 text-[#31393C]"><strong>Step 1 – </strong>In the Instagram workspace, you can access the Instagram Post, Instagram Story, Instagram Settings, Cart Views, and Line Chart.</p>
            <p class="text-sm md:text-base mt-4 text-[#31393C]"><strong>Step 2 – </strong> First go to WhatsApp Settings doctype, Enable the API through the check box, and then enter your access token, API endpoint, version, and name type for WhatsApp integration. You can enable or disable the API accordingly.</p>
            
           
  
            <Image loading="lazy" src={setup} alt="setup" class="mt-6" />
          </div>
  
        
  
        <!-- Setup END  -->

        <!-- Workspace Start -->
        <div class="mt-5 lg:mt-10">
          <h2
            class="text-[#3E96F4] text-lg md:text-xl lg:text-2xl font-semibold"
            id="workspace"
          >
            Workspace
          </h2>
          <p class="text-sm md:text-base mt-6 text-[#31393C]">In the WhatsApp workspace, you can access the Lead, WhatsApp Template, WhatsApp Message Log, and WhatsApp Bulk Message Log, as well as view Cart Views and Line Chart Views.</p>

         
          <Image loading="lazy" src={whatsapp_workspace} alt="whatsapp_workspace" class="mt-6" />
        </div>

        <!-- Workspace End -->

        <!-- Process Start -->
        <div class="mt-5 lg:mt-10">
          <h2
            class="text-[#3E96F4] text-lg md:text-xl lg:text-2xl font-semibold"
            id="process"
          >
          Process
          </h2>
          
          <p class="text-sm md:text-base mt-6 text-[#31393C]"><strong>Step 1- </strong>Create Dynamic Templates – After configuring WhatsApp Settings, the next step creating new templates in Wati. You can select the required fields for dynamic templates to add for end-to-end personalization.</p>
          <p class="text-sm md:text-base mt-6 text-[#31393C]"><strong>Step 2- </strong>Once you've created templates in Wati, the next step is to import them into our system. To do this, go to the "WhatsApp Templates" section and click on the "Get New Templates" button. This will fetch and import all templates from Wati into our system automatically.</p>

        

          <Image
            loading="lazy"
            src={whatsapp_template}
            alt="whatsapp_template"
            class="mt-6"
          />

          <p class="text-sm md:text-base mt-6 text-[#31393C]"><strong>Step 3- </strong> Once a template has been imported, you can send the template, to either individual leads or a bulk of leads.</p>

          <h2
          class="text-[#31393C] text-md md:text-lg lg:text-xl font-semibold mt-8"
        >
        Send WhatsApp Message to Individual Lead

        </h2>
        <ul class="list-disc ml-7 text-sm md:text-base mt-6 text-[#31393C]">
          <li>
            To send a WhatsApp template to a specific lead, fill out the basic details in the Lead form and enter the WhatsApp number in the “WhatsApp” field. Once entered, the WhatsApp logo will be visible for that lead.
          </li>
        
        </ul>


        <Image
        loading="lazy"
        src={individual_lead}
        alt="individual_lead"
        class="mt-6"
      />

      <Image
        loading="lazy"
        src={individual_lead_1}
        alt="individual_lead_1"
        class="mt-8"
      />

      <ul class="list-disc ml-7 text-sm md:text-base mt-6 text-[#31393C]">
        <li>
          Once the WhatsApp logo is visible, clicking on it will display the WhatsApp chat history in the chat box.
                </li>
      
      </ul>

      <Image
      loading="lazy"
      src={chat_history}
      alt="chat_history"
      class="mt-6"
    />

    <ul class="list-disc ml-7 text-sm md:text-base mt-6 text-[#31393C]">
      <li>
        To send a new template, click the "Template" button. This will open a dialog box where you can select a template from the available options.
              </li>
    
    </ul>

    <Image
    loading="lazy"
    src={template_button}
    alt="template_button"
    class="mt-6"
  />

  <ul class="list-disc ml-7 text-sm md:text-base mt-6 text-[#31393C]">
    <li>
      After selecting the appropriate template, click on the "Select" button. Subsequently, a new dialog box will open, presenting all the dynamic fields available for the selected template's dynamic data.
            </li>
  
  </ul>


  <Image
  loading="lazy"
  src={dialog_box}
  alt="dialog_box"
  class="mt-6"
/>

<Image
  loading="lazy"
  src={dynamic_data}
  alt="dynamic_data"
  class="mt-3"
/>

<ul class="list-disc ml-7 text-sm md:text-base mt-6 text-[#31393C]">
  <li>
    To fill in the values for dynamic fields, you have two options:
    you can either manually type the value into the field or enable
    the "Dynamic" checkbox located above the fields and then select an
    option for the field's value.
  </li>
  <li class="mt-3">
    Once all the dynamic fields for the template are filled in, click
    the "Send" button to send the WhatsApp template to that lead.
  </li>
</ul>

<Image
  loading="lazy"
  src={send_template}
  alt="send_template"
  class="mt-6"
/>

<ul class="list-disc ml-7 text-sm md:text-base mt-6 text-[#31393C]">
  <li>
    The history of sent templates will be displayed in the WhatsApp
    chat box.
  </li>
</ul>

<Image loading="lazy" src={chat_box} alt="chat_box" class="mt-6" />

<h2
  class="text-[#31393C] text-md md:text-lg lg:text-xl font-semibold mt-8"
>
  Send WhatsApp Messages in Bulk
</h2>

<ul class="list-disc ml-7 text-sm md:text-base mt-6 text-[#31393C]">
  <li>
    Choose the group of leads to whom you wish to send the WhatsApp
    template.
  </li>
  <li class="mt-3">
    After selecting the group, click on the “Action” button and select
    "Send WhatsApp Template." A dialog box will appear, allowing you
    to choose a template from the available options.
  </li>
</ul>

<Image
  loading="lazy"
  src={action_button}
  alt="action_button"
  class="mt-6"
/>

<Image
  loading="lazy"
  src={send_whatsapp_template}
  alt="send_whatsapp_template"
  class="mt-6"
/>

<Image
  loading="lazy"
  src={template_dialog_box}
  alt="template_dialog_box"
  class="mt-6"
/>

<ul class="list-disc ml-7 text-sm md:text-base mt-6 text-[#31393C]">
  <li>The remaining steps are the same as mentioned above.</li>
</ul>

        </div>

        <!-- Process End -->

            <!-- Send Session Message Start -->
            <div class="mt-5 lg:mt-10">
              <h2
                class="text-[#3E96F4] text-lg md:text-xl lg:text-2xl font-semibold"
                id="send_session_message"
              >
                Send Session Message
              </h2>
    
              <ul class="list-disc ml-7 text-sm md:text-base mt-6 text-[#31393C]">
                <li>
                  We cannot send a direct message to a lead without the session
                  window being open. To initiate the session window, the lead must
                  first send a message to us. Once initiated, the session window
                  remains open for 24 hours, during which we can send WhatsApp
                  session messages to the lead.
                </li>
                <li class="mt-3">
                  Each sent session message generates a log in our system, which is
                  displayed in the WhatsApp chat box.
                </li>
                <li class="mt-3">
                  If the session window is not open, an error message will appear:
                  “You can't send a message unless the Lead responds.”
                </li>
              </ul>
    
              <Image
                loading="lazy"
                src={send_session_message}
                alt="send_session_message"
                class="mt-6"
              />
    
              <Image
                loading="lazy"
                src={send_session_message_1}
                alt="send_session_message_1"
                class="mt-6"
              />
            </div>
    
            <!-- Send Session Message Start -->
    
            <!-- WhatsApp Individual Message Logs Start -->
            <div class="mt-5 lg:mt-10">
              <h2
                class="text-[#3E96F4] text-lg md:text-xl lg:text-2xl font-semibold"
                id="whatsapp_individual_message_logs"
              >
                WhatsApp Individual Message Logs
              </h2>
    
              <ul class="list-disc ml-7 text-sm md:text-base mt-6 text-[#31393C]">
                <li>
                  Every sent template or message generates a log entry in the
                  "WhatsApp Message Log" DocType, where you can view the complete
                  list of logs.
                </li>
                <li class="mt-3">Go to the "WhatsApp Message Log" doctype.</li>
                <li class="mt-3">
                  To view the list of sent messages to leads, open a record where
                  you can see the list of sent templates and messages.
                </li>
              </ul>
    
              <Image
                loading="lazy"
                src={whatsapp_message_log}
                alt="whatsapp_message_log"
                class="mt-6"
              />
    
              <Image
                loading="lazy"
                src={whatsapp_message_log_1}
                alt="whatsapp_message_log_1"
                class="mt-6"
              />
            </div>
    
            <!-- WhatsApp Individual Message Logs End -->
    
            <!--WhatsApp Bulk Message Logs Start -->
            <div class="mt-5 lg:mt-10">
              <h2
                class="text-[#3E96F4] text-lg md:text-xl lg:text-2xl font-semibold"
                id="whatsapp_bulk_message_logs"
              >
                WhatsApp Bulk Message Logs
              </h2>
    
              <ul class="list-disc ml-7 text-sm md:text-base mt-6 text-[#31393C]">
                <li>
                  Each time a bulk message is sent, a log entry is generated in the
                  "WhatsApp Bulk Message Log" DocType, where you can view the
                  complete list of logs.
                </li>
                <li class="mt-3">Go to the "WhatsApp Bulk Message Log" doctype.</li>
                <li class="mt-3">
                  To view the list of sent messages to leads, open a record where
                  you can see the list of leads to whom the template was sent.
                </li>
              </ul>
    
              <Image
                loading="lazy"
                src={bulk_message_logs}
                alt="bulk_message_logs"
                class="mt-6"
              />
    
              <Image
                loading="lazy"
                src={bulk_message_logs_1}
                alt="bulk_message_logs_1"
                class="mt-6"
              />
            </div>
    
            <!-- WhatsApp Bulk Message Logs End -->

     

      

       

               

     

        <!-- Support Start -->
        <div
        class="mt-5 lg:mt-10"
      >
        <h2
          class="text-[1.25rem] md:text-[1.50rem] lg:text-[1.75rem] font-semibold leading-9 text-[#3D96F5] max-lg:mb-5"
          id="support"
        >
          Support
        </h2>
        <form
          class="mt-7 max-lg:mb-5"
          id="support_form"
        >
          <!-- Name Field -->
          <div
            class="mb-4 flex flex-col lg:flex-row gap-5"
          >
            <div
              class="w-full lg:w-1/2"
            >
              <input
                placeholder="Name *"
                type="text"
                id="support_name"
                name="support_name"
                required
                class="mt-1 p-2 w-full border border-gray-300 rounded focus:outline-none focus:ring focus:ring-blue-300"
              />
            </div>
            <div
              class="w-full lg:w-1/2"
            >
              <input
                placeholder="Email *"
                type="email"
                id="support_email"
                name="support_email"
                required
                class="mt-1 p-2 w-full border border-gray-300 rounded focus:outline-none focus:ring focus:ring-blue-300"
              />
            </div>
          </div>

          <!-- Phone Number Field -->
          <!-- <div class="mb-4">
<select
id="support_issue"
name="support_issue"
class="mt-1 p-2 w-full border border-gray-300 rounded focus:outline-none focus:ring focus:ring-blue-300 "
/>
<option value="What’s the issue?" >What’s the issue?/ Feedback</option>
<option value="x">x</option>
<option value="y">y</option>
<option value="z">y</option>
</select>
</div> -->

          <!-- Description Field -->
          <div class="mb-4">
            <textarea
              placeholder="What’s the issue? / Feedback "
              id="support_requirements"
              name="support_requirements"
              required
              class="mt-1 p-2 w-full border border-gray-300 rounded focus:outline-none focus:ring focus:ring-blue-300"
              rows="4"
            ></textarea>
          </div>

          <!-- Submit Button -->
          <div>
            <button
              type="submit"
              class="mt-3 flex gap-5 items-center bg-[#3E96F4] rounded-lg px-3 md:px-3 lg:px-5 py-2 md:py-2 lg:py-3 max-w-[180px]"
            >
              <p
                class="text-white font-semibold text-sm md:text-base"
              >
                Send
              </p>
              <Image
                loading="eager"
                src={right_arrow}
                width={6}
                height={12}
                alt="right arrow "
              />
            </button>
          </div>
        </form>
      </div>

        <!-- Support Start -->

      <!-- faq start  -->
        <div
        x-data="{ accordion: 0 }"
        class="grid gap-5 rounded-[20px] text-[#31393C] lg:mt-10 mt-7"
      >
        <h2
          class="text-[1.25rem] md:text-[1.50rem] lg:text-[1.75rem] font-semibold leading-9 text-[#3D96F5]"
          id="faq"
        >
          FAQ
        </h2>
        <div
          class="bg-white rounded-xl border"
        >
          <div
            class="flex justify-between p-4 cursor-pointer"
            @click="accordion = accordion == 0 ? 1 : 0"
          >
            <p
              class="font-semibold text-sm md:text-sm lg:text-base"
            >
            What is ERPNext Wati Integration?
            </p>
            <Image
              loading="lazy"
              :class="accordion === 1 ? 'block' : 'hidden'"
              src={down_arrow}
              alt="down-arrow"
            />
            <Image
              loading="lazy"
              :class="accordion !== 1 ? 'block' : 'hidden'"
              src={up_arrow}
              alt="up-arrow"
            />
          </div>
          <div
            class="overflow-hidden bg-white rounded-b-[10px]"
            :class="accordion !== 0 ? 'h-0' : 'border-t-2'"
          >
            <p
              class="text-xs md:text-sm lg:text-base p-5"
            >
            ERPNext Wati Integration allows your ERPNext system to connect with WhatsApp through the Wati
platform. This integration helps businesses streamline customer communication by managing
WhatsApp conversations, sending notifications, and automating workflows directly within ERPNext.
            </p>
          </div>
        </div>

        <div
          class="bg-white rounded-xl border"
        >
          <div
            class="flex justify-between p-4 cursor-pointer"
            @click="accordion = accordion == 2 ? 0 : 2"
          >
            <p
              class="font-semibold text-sm md:text-sm lg:text-base"
            >
            How does ERPNext Wati Integration benefit my business?
            </p>
            <Image
              loading="lazy"
              :class="accordion !== 2 ? 'block' : 'hidden'"
              src={down_arrow}
              alt="down-arrow"
            />
            <Image
              loading="lazy"
              :class="accordion === 2 ? 'block' : 'hidden'"
              src={up_arrow}
              alt="up-arrow"
            />
          </div>
          <div
            class="overflow-hidden bg-white rounded-b-[10px]"
            :class="accordion !== 2 ? 'h-0' : 'border-t-2'"
          >
            <p
              class="text-xs md:text-sm lg:text-base p-5"
            >
            This integration lets you engage with customers on WhatsApp, the most widely used messaging
            platform, directly from ERPNext. You can automate messages, provide support, manage leads, and
            track all interactions within the ERP system, making customer communication more efficient and
            organized.
            </p>
          </div>
        </div>

        <div
          class="bg-white rounded-xl border"
        >
          <div
            class="flex justify-between p-4 cursor-pointer"
            @click="accordion = accordion == 3 ? 0 : 3"
          >
            <p
              class="font-semibold text-sm md:text-sm lg:text-base"
            >
            What features are included in ERPNext Wati Integration?
            </p>
            <Image
              loading="lazy"
              :class="accordion !== 3 ? 'block' : 'hidden'"
              src={down_arrow}
              alt="down-arrow"
            />
            <Image
              loading="lazy"
              :class="accordion === 3 ? 'block' : 'hidden'"
              src={up_arrow}
              alt="up-arrow"
            />
          </div>
          <div
            class="overflow-hidden bg-white rounded-b-[10px]"
            :class="accordion !== 3 ? 'h-0' : 'border-t-2'"
          >
            <p
              class="text-xs md:text-sm lg:text-base p-5"
            >
            Some key features include:
            <ul class="list-disc lg:ml-14 ml-10 text-xs md:text-sm lg:text-base mr-5">
              <li class="mb-3">Two-way communication between WhatsApp and ERPNext.</li>
              <li class="mb-3">Automated WhatsApp notifications based on ERPNext events (like order confirmation,
                shipment tracking).</li>
              <li class="mb-3">Message templates for consistent and personalized communication.</li>
              <li class="mb-3">Integration with CRM for customer service and lead management.</li>
              <li class="mb-3">Bulk messaging for announcements and marketing campaigns.</li>
            </ul>
            </p>
          </div>
        </div>

        <div
          class="bg-white rounded-xl border"
        >
          <div
            class="flex justify-between p-4 cursor-pointer"
            @click="accordion = accordion == 4 ? 0: 4"
          >
            <p
              class="font-semibold text-sm md:text-sm lg:text-base"
            >
            Do I need technical expertise to use ERPNext Wati Integration?
            </p>
            <Image
              loading="lazy"
              :class="accordion !== 4 ? 'block' : 'hidden'"
              src={down_arrow}
              alt="down-arrow"
            />
            <Image
              loading="lazy"
              :class="accordion === 4 ? 'block' : 'hidden'"
              src={up_arrow}
              alt="up-arrow"
            />
          </div>
          <div
            class="overflow-hidden bg-white rounded-b-[10px]"
            :class="accordion !== 4 ? 'h-0' : 'border-t-2'"
          >
            <p
              class="text-xs md:text-sm lg:text-base p-5"
            >
            No, the integration is designed to be user-friendly. Our team will assist with the setup, and no
            specialized technical knowledge is required to operate it once integrated.
            </p>
          </div>
        </div>

        <div
          class="bg-white rounded-xl border"
        >
          <div
            class="flex justify-between p-4 cursor-pointer"
            @click="accordion = accordion == 5 ? 0: 5"
          >
            <p
              class="font-semibold text-sm md:text-sm lg:text-base"
            >
            Can I automate WhatsApp messages using ERPNext Wati Integration?
                      </p>
            <Image
              loading="lazy"
              :class="accordion !== 5 ? 'block' : 'hidden'"
              src={down_arrow}
              alt="down-arrow"
            />
            <Image
              loading="lazy"
              :class="accordion === 5 ? 'block' : 'hidden'"
              src={up_arrow}
              alt="up-arrow"
            />
          </div>
          <div
            class="overflow-hidden bg-white rounded-b-[10px]"
            :class="accordion !== 5 ? 'h-0' : 'border-t-2'"
          >
            <p
              class="text-xs md:text-sm lg:text-base p-5"
            >
            Yes, you can automate WhatsApp messages based on events triggered within ERPNext, such as
            sending reminders, order updates, or payment confirmations, reducing manual tasks and ensuring
            timely communication with customers.
            </p>
          </div>
        </div>

        <div class="bg-white rounded-xl border">
          <div
            class="flex justify-between p-4 cursor-pointer"
            @click="accordion = accordion == 6 ? 0: 6"
          >
            <p class="font-semibold text-sm md:text-sm lg:text-base">
              Can I manage customer replies to WhatsApp messages within ERPNext?
            </p>
            <Image
              loading="lazy"
              :class="accordion !== 6 ? 'block' : 'hidden'"
              src={down_arrow}
              alt="down-arrow"
            />
            <Image
              loading="lazy"
              :class="accordion === 6 ? 'block' : 'hidden'"
              src={up_arrow}
              alt="up-arrow"
            />
          </div>
          <div
            class="overflow-hidden bg-white rounded-b-[10px]"
            :class="accordion !== 6 ? 'h-0' : 'border-t-2'"
          >
            <p class="text-xs md:text-sm lg:text-base p-5">
              Yes, ERPNext Wati Integration allows for two-way communication. Customer responses to
WhatsApp messages can be tracked and managed
            </p>
          </div>
        </div>

        <div class="bg-white rounded-xl border">
          <div
            class="flex justify-between p-4 cursor-pointer"
            @click="accordion = accordion == 7 ? 0: 7"
          >
            <p class="font-semibold text-sm md:text-sm lg:text-base">
              Is the integration between ERPNext and WhatsApp via Wati secure?
            </p>
            <Image
              loading="lazy"
              :class="accordion !== 7 ? 'block' : 'hidden'"
              src={down_arrow}
              alt="down-arrow"
            />
            <Image
              loading="lazy"
              :class="accordion === 7 ? 'block' : 'hidden'"
              src={up_arrow}
              alt="up-arrow"
            />
          </div>
          <div
            class="overflow-hidden bg-white rounded-b-[10px]"
            :class="accordion !== 7 ? 'h-0' : 'border-t-2'"
          >
            <p class="text-xs md:text-sm lg:text-base p-5">
              Yes, the integration is secure and follows WhatsApp Business API security protocols. Data exchanged
              between ERPNext and WhatsApp via Wati is encrypted, ensuring compliance with industry
              standards.
            </p>
          </div>
        </div>

        <div class="bg-white rounded-xl border">
          <div
            class="flex justify-between p-4 cursor-pointer"
            @click="accordion = accordion == 8 ? 0: 8"
          >
            <p class="font-semibold text-sm md:text-sm lg:text-base">
              Are there limits on the number of WhatsApp messages I can send?
            </p>
            <Image
              loading="lazy"
              :class="accordion !== 8 ? 'block' : 'hidden'"
              src={down_arrow}
              alt="down-arrow"
            />
            <Image
              loading="lazy"
              :class="accordion === 8 ? 'block' : 'hidden'"
              src={up_arrow}
              alt="up-arrow"
            />
          </div>
          <div
            class="overflow-hidden bg-white rounded-b-[10px]"
            :class="accordion !== 8 ? 'h-0' : 'border-t-2'"
          >
            <p class="text-xs md:text-sm lg:text-base p-5">
              The number of messages you can send depends on the plan you have with Wati and the WhatsApp
Business API. Contact us for detailed information on messaging limits and pricing tiers.
            </p>
          </div>
        </div>

        <div class="bg-white rounded-xl border">
          <div
            class="flex justify-between p-4 cursor-pointer"
            @click="accordion = accordion == 9 ? 0: 9"
          >
            <p class="font-semibold text-sm md:text-sm lg:text-base">
              Can I use WhatsApp for marketing campaigns with ERPNext Wati Integration?
            </p>
            <Image
              loading="lazy"
              :class="accordion !== 9 ? 'block' : 'hidden'"
              src={down_arrow}
              alt="down-arrow"
            />
            <Image
              loading="lazy"
              :class="accordion === 9 ? 'block' : 'hidden'"
              src={up_arrow}
              alt="up-arrow"
            />
          </div>
          <div
            class="overflow-hidden bg-white rounded-b-[10px]"
            :class="accordion !== 9 ? 'h-0' : 'border-t-2'"
          >
            <p class="text-xs md:text-sm lg:text-base p-5">
              Yes, you can send bulk or broadcast messages to customers for marketing purposes or important
notifications. However, it is essential to ensure that customers have opted in for such
communications to comply with WhatsApp’s policies and avoid spamming.
            </p>
          </div>
        </div>

        <div class="bg-white rounded-xl border">
          <div
            class="flex justify-between p-4 cursor-pointer"
            @click="accordion = accordion == 10 ? 0: 10"
          >
            <p class="font-semibold text-sm md:text-sm lg:text-base">
              How do I get started with ERPNext Wati Integration?
            </p>
            <Image
              loading="lazy"
              :class="accordion !== 10 ? 'block' : 'hidden'"
              src={down_arrow}
              alt="down-arrow"
            />
            <Image
              loading="lazy"
              :class="accordion === 10 ? 'block' : 'hidden'"
              src={up_arrow}
              alt="up-arrow"
            />
          </div>
          <div
            class="overflow-hidden bg-white rounded-b-[10px]"
            :class="accordion !== 10 ? 'h-0' : 'border-t-2'"
          >
            <p class="text-xs md:text-sm lg:text-base p-5">
              To get started, reach out to our team at Sanskar Technolab. We’ll help you with the setup,
              customization, and ongoing support for integrating ERPNext with WhatsApp through Wati, ensuring
you maximize the benefits for your business.
            </p>
          </div>
        </div>
      </div>

      <!-- faq end  -->



                                             

                                         
                                             
                                              
                                              <style>
                                                li::marker {
                                                  color: #727578;
                                                }

                                                .dot li::marker {
                                                  color: #92c9ff;
                                                }

                                                .is-active {
                                                  svg path {
                                                    fill: #3e96f4; /* Change to desired active color */
                                                  }

                                                  .activedot li::marker {
                                                    color: #3e96f4;
                                                  }

                                                  h2 {
                                                    color: #3e96f4; /* Change to desired active color */
                                                  }
                                                }

                                                .shadow-box {
                                                  box-shadow: 0px 0px 5px 5px
                                                    #0000001c;
                                                }

                                                .getting_started {
                                                  border-radius: 10px;
                                                  border: 1px solid #dadada;
                                                  background: linear-gradient(
                                                    135deg,
                                                    #ecf5ff 0%,
                                                    #fff 100%
                                                  );
                                                }

                                                .menu-hidden {
                                                  display: none;
                                                }

                                                .menu-visible {
                                                  display: block;
                                                }

                                                .container {
                                                  cursor: pointer;
                                                  /* Add additional styling as needed */
                                                }

                                                #tablecontentmenu {
                                                  display: none;
                                                }

                                                @media (min-width: 280px) and (max-width: 400px) {
                                                  .settop {
                                                    top: 5.5rem !important;
                                                  }
                                                }
                                              </style>

                                              <script>
                                                window.onload = function () {
                                                  var myDiv =
                                                    document.getElementById(
                                                      "tablecontentmenu"
                                                    );
                                                  var footer =
                                                    document.getElementById(
                                                      "section"
                                                    );
                                                  var introduction =
                                                    document.getElementById(
                                                      "introduction"
                                                    );

                                                  function checkVisibility() {
                                                    if (
                                                      !myDiv ||
                                                      !footer ||
                                                      !introduction
                                                    ) {
                                                      console.error(
                                                        "Element not found:",
                                                        !myDiv
                                                          ? "tablecontentmenu"
                                                          : !footer
                                                          ? "footer"
                                                          : "introduction"
                                                      );
                                                      return;
                                                    }

                                                    var footerPosition =
                                                      footer.getBoundingClientRect();
                                                    var introductionPosition =
                                                      introduction.getBoundingClientRect();
                                                    var windowHeight =
                                                      window.innerHeight;

                                                    if (
                                                      footerPosition.top <=
                                                        windowHeight ||
                                                      (introductionPosition.top <=
                                                        windowHeight &&
                                                        introductionPosition.bottom >=
                                                          0)
                                                    ) {
                                                      myDiv.style.display =
                                                        "none";
                                                    } else {
                                                      myDiv.style.display =
                                                        "block";
                                                    }
                                                  }

                                                  function handleResize() {
                                                    if (
                                                      window.innerWidth <= 767
                                                    ) {
                                                      window.addEventListener(
                                                        "scroll",
                                                        checkVisibility
                                                      );
                                                      checkVisibility(); // Ensure the correct state on load
                                                    } else {
                                                      window.removeEventListener(
                                                        "scroll",
                                                        checkVisibility
                                                      );
                                                      if (myDiv) {
                                                        myDiv.style.display =
                                                          "none";
                                                      }
                                                    }
                                                  }

                                                  // Initial check and event listeners
                                                  handleResize();
                                                  window.addEventListener(
                                                    "resize",
                                                    handleResize
                                                  );
                                                };

                                                document.addEventListener(
                                                  "DOMContentLoaded",
                                                  function () {
                                                    document
                                                      .querySelector(
                                                        ".toggle-menu"
                                                      )
                                                      .addEventListener(
                                                        "click",
                                                        function () {
                                                          toggleMenu();
                                                        }
                                                      );
                                                  }
                                                );

                                                function toggleMenu() {
                                                  const menu =
                                                    document.getElementById(
                                                      "mobile-menu"
                                                    );
                                                  if (
                                                    menu.classList.contains(
                                                      "menu-hidden"
                                                    )
                                                  ) {
                                                    menu.classList.remove(
                                                      "menu-hidden"
                                                    );
                                                    menu.classList.add(
                                                      "menu-visible"
                                                    );
                                                  } else {
                                                    menu.classList.remove(
                                                      "menu-visible"
                                                    );
                                                    menu.classList.add(
                                                      "menu-hidden"
                                                    );
                                                  }
                                                }

                                                document.addEventListener(
                                                  "DOMContentLoaded",
                                                  function () {
                                                    const buttons =
                                                      document.querySelectorAll(
                                                        ".button"
                                                      );
                                                    let activeButton = null;

                                                    buttons.forEach(
                                                      (button) => {
                                                        button.addEventListener(
                                                          "click",
                                                          function (event) {
                                                            // Prevent the default action if needed
                                                            event.preventDefault();

                                                            const href =
                                                              this.getAttribute(
                                                                "href"
                                                              ); // Get the href attribute value
                                                            window.location.href =
                                                              href; // Redirect to the URL

                                                            // Remove active class from previous button
                                                            if (activeButton) {
                                                              activeButton.classList.remove(
                                                                "active"
                                                              );
                                                            }

                                                            // Add active class to clicked button
                                                            button.classList.add(
                                                              "active"
                                                            );

                                                            // Update the active button reference
                                                            activeButton =
                                                              button;
                                                          }
                                                        );
                                                      }
                                                    );
                                                  }
                                                );

                                                function ready(fn) {
                                                  document.addEventListener(
                                                    "DOMContentLoaded",
                                                    fn,
                                                    false
                                                  );
                                                }

                                                ready(() => {
                                                  const motionQuery =
                                                    window.matchMedia(
                                                      "(prefers-reduced-motion)"
                                                    );

                                                  const TableOfContents = {
                                                    container:
                                                      document.querySelector(
                                                        ".js-toc"
                                                      ),
                                                    links: null,
                                                    headings: null,
                                                    intersectionOptions: {
                                                      rootMargin: "0px",
                                                      threshold: 1,
                                                    },
                                                    previousSection: null,
                                                    observer: null,

                                                    init() {
                                                      this.handleObserver =
                                                        this.handleObserver.bind(
                                                          this
                                                        );

                                                      this.setUpObserver();
                                                      this.findLinksAndHeadings();
                                                      this.observeSections();

                                                      this.links.forEach(
                                                        (link) => {
                                                          link.addEventListener(
                                                            "click",
                                                            this.handleLinkClick.bind(
                                                              this
                                                            )
                                                          );
                                                        }
                                                      );
                                                    },

                                                    handleLinkClick(evt) {
                                                      evt.preventDefault();
                                                      let id = evt.target
                                                        .getAttribute("href")
                                                        .replace("#", "");

                                                      let section =
                                                        this.headings.find(
                                                          (heading) => {
                                                            return (
                                                              heading.getAttribute(
                                                                "id"
                                                              ) === id
                                                            );
                                                          }
                                                        );

                                                      section.setAttribute(
                                                        "tabindex",
                                                        -1
                                                      );
                                                      section.focus();

                                                      window.scroll({
                                                        behavior:
                                                          motionQuery.matches
                                                            ? "instant"
                                                            : "smooth",
                                                        top:
                                                          section.offsetTop -
                                                          15,
                                                        block: "start",
                                                      });

                                                      if (
                                                        this.container.classList.contains(
                                                          "is-active"
                                                        )
                                                      ) {
                                                        this.container.classList.remove(
                                                          "is-active"
                                                        );
                                                      }
                                                    },

                                                    handleObserver(
                                                      entries,
                                                      observer
                                                    ) {
                                                      entries.forEach(
                                                        (entry) => {
                                                          let href = `#${entry.target.getAttribute(
                                                              "id"
                                                            )}`,
                                                            link =
                                                              this.links.find(
                                                                (l) =>
                                                                  l.getAttribute(
                                                                    "href"
                                                                  ) === href
                                                              );

                                                          if (
                                                            entry.isIntersecting &&
                                                            entry.intersectionRatio >=
                                                              1
                                                          ) {
                                                            link.classList.add(
                                                              "is-visible"
                                                            );
                                                            this.previousSection =
                                                              entry.target.getAttribute(
                                                                "id"
                                                              );
                                                          } else {
                                                            link.classList.remove(
                                                              "is-visible"
                                                            );
                                                          }

                                                          this.highlightFirstActive();
                                                        }
                                                      );
                                                    },

                                                    highlightFirstActive() {
                                                      let firstVisibleLink =
                                                        this.container.querySelector(
                                                          ".is-visible"
                                                        );

                                                      this.links.forEach(
                                                        (link) => {
                                                          link.classList.remove(
                                                            "is-active"
                                                          );
                                                        }
                                                      );

                                                      if (firstVisibleLink) {
                                                        firstVisibleLink.classList.add(
                                                          "is-active"
                                                        );
                                                      }

                                                      if (
                                                        !firstVisibleLink &&
                                                        this.previousSection
                                                      ) {
                                                        this.container
                                                          .querySelector(
                                                            `a[href="#${this.previousSection}"]`
                                                          )
                                                          .classList.add(
                                                            "is-active"
                                                          );
                                                      }
                                                    },

                                                    observeSections() {
                                                      this.headings.forEach(
                                                        (heading) => {
                                                          this.observer.observe(
                                                            heading
                                                          );
                                                        }
                                                      );
                                                    },

                                                    setUpObserver() {
                                                      this.observer =
                                                        new IntersectionObserver(
                                                          this.handleObserver,
                                                          this.intersectionOptions
                                                        );
                                                    },

                                                    findLinksAndHeadings() {
                                                      this.links = [
                                                        ...this.container.querySelectorAll(
                                                          "a"
                                                        ),
                                                      ];
                                                      this.headings =
                                                        this.links.map(
                                                          (link) => {
                                                            let id =
                                                              link.getAttribute(
                                                                "href"
                                                              );
                                                            return document.querySelector(
                                                              id
                                                            );
                                                          }
                                                        );
                                                    },
                                                  };

                                                  TableOfContents.init();
                                                });

                                                // Smooth scrolling function
                                                document
                                                  .querySelectorAll(
                                                    'a[href^="#"]'
                                                  )
                                                  .forEach((anchor) => {
                                                    anchor.addEventListener(
                                                      "click",
                                                      function (e) {
                                                        e.preventDefault();

                                                        document
                                                          .querySelector(
                                                            this.getAttribute(
                                                              "href"
                                                            )
                                                          )
                                                          .scrollIntoView({
                                                            behavior: "smooth",
                                                          });
                                                      }
                                                    );
                                                  });

                                                // -------------------------------------------------------------------------------------------------
                                                var talk_form =
                                                  document.getElementById(
                                                    "support_form"
                                                  );
                                                talk_form.addEventListener(
                                                  "submit",
                                                  handleContactForm
                                                );

                                                // Add event listener to email input for real-time validation
                                                var emailInput =
                                                  document.querySelector(
                                                    'input[name="support_email"]'
                                                  );
                                                emailInput.addEventListener(
                                                  "blur",
                                                  validateEmailInput
                                                ); // Changed event to "blur"

                                                function validateEmailInput() {
                                                  const emailValue =
                                                    emailInput.value.trim();

                                                  const errorMessageElement =
                                                    emailInput.nextElementSibling;

                                                  if (emailValue === "") {
                                                    hideErrorMessage(
                                                      errorMessageElement
                                                    ); // Hide error message if email is empty
                                                    emailInput.style.borderColor =
                                                      ""; // Reset border color
                                                    return;
                                                  }

                                                  if (
                                                    !validateEmail(emailValue)
                                                  ) {
                                                    blinkBorder(emailInput);
                                                    displayErrorMessage(
                                                      errorMessageElement,
                                                      "Please enter a valid email address.",
                                                      emailInput
                                                    );
                                                  } else {
                                                    hideErrorMessage(
                                                      errorMessageElement
                                                    ); // Hide error message if email is valid
                                                    emailInput.style.borderColor =
                                                      ""; // Reset border color
                                                  }
                                                }

                                                var nameInput =
                                                  document.querySelector(
                                                    'input[name="support_name"]'
                                                  );
                                                nameInput.addEventListener(
                                                  "blur",
                                                  validateNameInput
                                                );

                                                function validateNameInput() {
                                                  const nameValue =
                                                    nameInput.value.trim();

                                                  const errorMessageElement =
                                                    nameInput.nextElementSibling;

                                                  if (nameValue === "") {
                                                    hideErrorMessage(
                                                      errorMessageElement
                                                    ); // Hide error message if email is empty
                                                    nameInput.style.borderColor =
                                                      ""; // Reset border color
                                                    return;
                                                  }

                                                  if (
                                                    !validateName(nameValue)
                                                  ) {
                                                    blinkBorder(nameInput);
                                                    displayErrorMessage(
                                                      errorMessageElement,
                                                      "Please enter a valid name.",
                                                      nameInput
                                                    );
                                                  } else {
                                                    hideErrorMessage(
                                                      errorMessageElement
                                                    ); // Hide error message if email is valid
                                                    nameInput.style.borderColor =
                                                      ""; // Reset border color
                                                  }
                                                }

                                                // Validation function for email
                                                function validateEmail(email) {
                                                  const re =
                                                    /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
                                                  return re.test(
                                                    String(email).toLowerCase()
                                                  );
                                                }

                                                function validateName(name) {
                                                  const re =
                                                    /^(?=(?:[^A-Za-z]*[A-Za-z]){2})(?![^\d~`?!^*¨ˆ;@=$%{}\[\]|\\\/<>#“.,]*[\d~`?!^*¨ˆ;@=$%{}\[\]|\\\/<>#“.,])\S+(?: \S+){0,2}$/;

                                                  return re.test(
                                                    String(name).toLowerCase()
                                                  );
                                                }

                                                function displayErrorMessage(
                                                  errorMessageElement,
                                                  message,
                                                  inputField
                                                ) {
                                                  if (
                                                    !errorMessageElement ||
                                                    !errorMessageElement.classList.contains(
                                                      "error-message"
                                                    )
                                                  ) {
                                                    // If error message doesn't exist, create and insert it
                                                    errorMessageElement =
                                                      document.createElement(
                                                        "p"
                                                      );
                                                    errorMessageElement.textContent =
                                                      message;
                                                    errorMessageElement.classList.add(
                                                      "error-message"
                                                    );
                                                    errorMessageElement.style.color =
                                                      "red"; // Adjust the color
                                                    errorMessageElement.style.fontSize =
                                                      "0.8rem"; // Adjust the font size
                                                    errorMessageElement.style.marginTop =
                                                      "0.2rem"; // Adjust the margin-top
                                                    errorMessageElement.style.marginBottom =
                                                      "0"; // Remove bottom margin

                                                    // Insert the error message after the input field
                                                    inputField.parentNode.insertBefore(
                                                      errorMessageElement,
                                                      inputField.nextSibling
                                                    );
                                                  } else {
                                                    errorMessageElement.textContent =
                                                      message; // Update existing error message
                                                  }
                                                }

                                                function hideErrorMessage(
                                                  errorMessageElement
                                                ) {
                                                  if (
                                                    errorMessageElement &&
                                                    errorMessageElement.classList.contains(
                                                      "error-message"
                                                    )
                                                  ) {
                                                    // If error message exists, remove it
                                                    errorMessageElement.remove();
                                                  }
                                                }

                                                const apiKey = import.meta.env
                                                  .PUBLIC_ApiKey as string;
                                                const secretKey = import.meta
                                                  .env
                                                  .PUBLIC_SecretKey as string;

                                                function blinkBorder(element) {
                                                  // If the border color is not red, set it to red
                                                  if (
                                                    element.style
                                                      .borderColor !== "red"
                                                  ) {
                                                    element.style.borderColor =
                                                      "red";
                                                  } else {
                                                    // If the border color is already red, reset it to its original state
                                                    element.style.borderColor =
                                                      "";
                                                  }
                                                }

                                                function resetBorderColorOnFocus(
                                                  inputElement
                                                ) {
                                                  inputElement.addEventListener(
                                                    "focus",
                                                    () => {
                                                      inputElement.style.borderColor =
                                                        ""; // Remove the border color (set it to null)
                                                    }
                                                  );
                                                }

                                                // send data in frappe
                                                function handleContactForm(e) {
                                                  e.preventDefault();
                                                  const form = e.target; // Get the form that triggered the submission

                                                  const nameInput =
                                                    form.querySelector(
                                                      'input[name="support_name"]'
                                                    );
                                                  const emailInput =
                                                    form.querySelector(
                                                      'input[name="support_email"]'
                                                    );
                                                  const messageInput =
                                                    document.querySelector(
                                                      'textarea[name="support_requirements"]'
                                                    );
                                                  // const isuueInput = document.querySelector('select[name="support_issue"]');

                                                  const nameValue =
                                                    nameInput.value.trim();
                                                  const emailValue =
                                                    emailInput.value.trim();
                                                  const messageValue =
                                                    messageInput.value.trim();
                                                  // const phoneValue = isuueInput.value.trim();

                                                  resetBorderColorOnFocus(
                                                    nameInput
                                                  );
                                                  resetBorderColorOnFocus(
                                                    emailInput
                                                  );
                                                  resetBorderColorOnFocus(
                                                    messageInput
                                                  );
                                                  // resetBorderColorOnFocus(isuueInput);

                                                  if (nameValue === "") {
                                                    blinkBorder(nameInput);
                                                  }

                                                  if (emailValue === "") {
                                                    blinkBorder(emailInput);
                                                  }

                                                  if (messageValue === "") {
                                                    blinkBorder(messageInput);
                                                  }

                                                  if (
                                                    nameValue === "" ||
                                                    emailValue === "" ||
                                                    messageValue === ""
                                                  ) {
                                                    return;
                                                  }

                                                  const urlParams =
                                                    new URLSearchParams(
                                                      window.location.search
                                                    );

                                                  // Get the value of the 'page' parameter
                                                  const pageValue =
                                                    urlParams.get("page");

                                                  const queryTypeValue =
                                                    pageValue
                                                      ? "Demo"
                                                      : "General";

                                                  // alert('Please select a file to upload.');
                                                  const formData = new FormData(
                                                    e.target
                                                  );
                                                  const data =
                                                    Object.fromEntries(
                                                      formData.entries()
                                                    );

                                                  formData.set(
                                                    "data",
                                                    JSON.stringify(data)
                                                  );
                                                  var name = data.support_name;
                                                  var email =
                                                    data.support_email;
                                                  var message =
                                                    data.support_requirements;

                                                  // // Function to get the user's IP address using ipify
                                                  // function getUserIPAddress() {
                                                  //   return fetch("https://api.ipify.org?format=json")
                                                  //     .then((response) => response.json())
                                                  //     .then((data) => data.ip)
                                                  //     .catch((error) => {
                                                  //       console.error("Error fetching IP address:", error);
                                                  //       return null; // Handle the error gracefully
                                                  //     });
                                                  // }

                                                  // getUserIPAddress().then((ipAddress) => {
                                                  //   let { browserName, device } = detectBrowser();

                                                  if (
                                                    validateEmail(emailValue) &&
                                                    validateName(nameValue)
                                                  ) {
                                                    fetch(
                                                      "https://sanskar.frappe.cloud/api/resource/Issue",
                                                      {
                                                        method: "POST",
                                                        headers: {
                                                          Accept:
                                                            "application/json",
                                                          "Content-Type":
                                                            "application/json",
                                                          Authorization: `token ${apiKey}:${secretKey}`,
                                                        },
                                                        body: JSON.stringify({
                                                          custom_full_name:
                                                            name,
                                                          raised_by: email,
                                                          subject: message,
                                                          customer:
                                                            "Website Support",
                                                          project:
                                                            "Website Support",
                                                        }),
                                                      }
                                                    )
                                                      .then((res) => {
                                                        if (
                                                          res.status === 200
                                                        ) {
                                                          // alert("You have been registered successfully.")
                                                          window.location.href =
                                                            "/thank-you";
                                                        } else {
                                                          sendEmailNotification(
                                                            name,
                                                            email,
                                                            message,
                                                            "Website Support",
                                                            "Website Support",

                                                            res
                                                          );
                                                          alert(
                                                            "Failed to submit data. Please try after some time."
                                                          );
                                                        }
                                                      })
                                                      .catch((error) => {
                                                        console.error(error);
                                                      });
                                                  }
                                                  // });
                                                }

                                                // .then((ipAddress) => {
                                                //   console.log("Received IP Address:", ipAddress);
                                                // })
                                                // .catch((error) => {
                                                //   console.error("Error:", error);
                                                // });

                                                function get_ip() {
                                                  // Return a Promise that resolves with the IP address
                                                  return new Promise(
                                                    (resolve, reject) => {
                                                      fetch(
                                                        "https://api.ipify.org?format=json"
                                                      )
                                                        .then((response) =>
                                                          response.json()
                                                        )
                                                        .then((data) => {
                                                          const ipAddress =
                                                            data.ip;
                                                          // console.log("Public IP Address:", ipAddress);
                                                          resolve(ipAddress); // Resolve the Promise with the IP address
                                                        })
                                                        .catch((error) => {
                                                          console.error(
                                                            "Error fetching IP address:",
                                                            error
                                                          );
                                                          reject(error); // Reject the Promise with the error
                                                        });
                                                    }
                                                  );
                                                }

                                                get_ip();

                                                function detectBrowser() {
                                                  const userAgent =
                                                    navigator.userAgent;
                                                  var browserName = "Unknown";

                                                  // Check for Chrome
                                                  if (
                                                    userAgent.indexOf(
                                                      "Chrome"
                                                    ) !== -1
                                                  ) {
                                                    browserName =
                                                      "Google Chrome";
                                                  }
                                                  // Check for Firefox
                                                  else if (
                                                    userAgent.indexOf(
                                                      "Firefox"
                                                    ) !== -1
                                                  ) {
                                                    browserName =
                                                      "Mozilla Firefox";
                                                  }
                                                  // Check for Safari
                                                  else if (
                                                    userAgent.indexOf(
                                                      "Safari"
                                                    ) !== -1
                                                  ) {
                                                    browserName =
                                                      "Apple Safari";
                                                  }
                                                  // Check for Edge
                                                  else if (
                                                    userAgent.indexOf("Edg") !==
                                                    -1
                                                  ) {
                                                    browserName =
                                                      "Microsoft Edge";
                                                  }
                                                  // Check for Internet Explorer
                                                  else if (
                                                    userAgent.indexOf(
                                                      "MSIE"
                                                    ) !== -1 ||
                                                    userAgent.indexOf(
                                                      "Trident"
                                                    ) !== -1
                                                  ) {
                                                    browserName =
                                                      "Internet Explorer";
                                                  }

                                                  // Log the detected browser to the console
                                                  //   console.log(`Detected browser: ${browserName}`);

                                                  // Detect the device type based on screen size
                                                  const screenWidth =
                                                    window.innerWidth;
                                                  var device = "Unknown";
                                                  if (screenWidth <= 576) {
                                                    device = "Mobile";
                                                  } else if (
                                                    screenWidth <= 992
                                                  ) {
                                                    device = "Tablet";
                                                  } else if (
                                                    screenWidth <= 1200
                                                  ) {
                                                    device = "Laptop";
                                                  } else {
                                                    device = "Desktop";
                                                  }

                                                  return {
                                                    browserName,
                                                    device,
                                                  };
                                                }

                                                function sendEmailNotification(
                                                  name = "",
                                                  email = "",
                                                  message = "",
                                                  customer = "",
                                                  project = ""
                                                  // page_name=""
                                                ) {
                                                  // console.log("sending email notification...");
                                                  // return
                                                  fetch(
                                                    "https://sanskartechnolab.com/api/method/astro_sanskar.api.send_form_failed_notification",
                                                    {
                                                      method: "POST",
                                                      headers: {
                                                        Accept:
                                                          "application/json",
                                                        "Content-Type":
                                                          "application/json",
                                                        // Authorization: `token ${apiKey}:${secretKey}`,
                                                      },
                                                      body: JSON.stringify({
                                                        custom_full_name: name,
                                                        raised_by: email,
                                                        subject: message,
                                                        customer:
                                                          "Website Support",
                                                        project:
                                                          "Website Support",
                                                        page_name:
                                                          "Follow Up App",
                                                      }),
                                                    }
                                                  )
                                                    .then((res) => {
                                                      if (res.status === 200) {
                                                        alert(
                                                          "email notification sent."
                                                        );
                                                        // console.log("email notification sent.");
                                                      } else {
                                                        // console.log("failed to send email notification", res);
                                                        alert(
                                                          "We are unable to process your request. please send your requirements on info@sanskartechnolab.com"
                                                        );
                                                      }
                                                    })
                                                    .catch((error) => {
                                                      console.error(
                                                        "error",
                                                        error
                                                      );
                                                    });
                                                }

                                                // Function to show/hide the button based on scroll position
                                                // function checkScrollPosition() {
                                                //   var scrollToTopButton = document.getElementById("tablecontentmenu");

                                                //   if (window.scrollY > 400) {
                                                //     scrollToTopButton.style.display = "block";
                                                //   } else {
                                                //     scrollToTopButton.style.display = "none";
                                                //   }
                                                // }

                                                // // Function to add or remove the scroll event listener based on screen width
                                                // function handleResize() {
                                                //   var scrollToTopButton = document.getElementById("tablecontentmenu");

                                                //   if (window.innerWidth < 768) { // Mobile screen width threshold
                                                //     window.addEventListener("scroll", checkScrollPosition);
                                                //     checkScrollPosition(); // Initial check in case the user has already scrolled
                                                //   } else {
                                                //     window.removeEventListener("scroll", checkScrollPosition);
                                                //     scrollToTopButton.style.display = "none"; // Ensure button is hidden on larger screens
                                                //   }
                                                // }

                                                // // Attach the resize event listener to the window
                                                // window.addEventListener("resize", handleResize);

                                                // // Initial check when the page loads
                                                // document.addEventListener("DOMContentLoaded", function() {
                                                //   handleResize();
                                                // });

                                                document.addEventListener(
                                                  "DOMContentLoaded",
                                                  function () {
                                                    var links =
                                                      document.querySelectorAll(
                                                        'a[href^="#"]'
                                                      );

                                                    links.forEach(function (
                                                      link
                                                    ) {
                                                      link.addEventListener(
                                                        "click",
                                                        function (e) {
                                                          e.preventDefault();
                                                          var target =
                                                            this.hash;
                                                          var targetElement =
                                                            document.querySelector(
                                                              target
                                                            );

                                                          window.scrollTo({
                                                            top:
                                                              targetElement.offsetTop -
                                                              170, // Adjusted to include 100px offset
                                                            behavior: "smooth",
                                                          });

                                                          // Uncomment the next line if you want to update the URL hash
                                                          // window.location.hash = target;
                                                        }
                                                      );
                                                    });
                                                  }
                                                );
                                              </script>
                                            </ul>
                                          </div>
                                        </ul>
                                      </div>
                                    </ul>
                                  </div>
                                </ul>
                              </div>
                            </ul>
                          </div>
                        </ul>
                      </div>
                    </ul>
                  </div>
                </ul>
              </div>
            </ul>
          </div>
        </div>
      </div>
    </section></body>
</Layout>
