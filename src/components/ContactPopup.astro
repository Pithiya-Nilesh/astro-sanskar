---
import { Image, Picture } from "@astrojs/image/components";
import contact_us from "../../public/Images/contact_us.svg";
import cancle from "../../public/Images/cancle.svg";
import "../styles.css";
---

<!-- Button -->
<button
  class="max-sm:hidden z-10 fixed -rotate-90 flex right-[-66px] rounded-tr-lg rounded-tl-lg top-1/2 bg-[#31393C] text-white font-bold py-2 px-4"
  id="contact-button"
>
  <span class="mr-2">
    <Image src={contact_us} alt="contact-us" class="w-6 h-6 rotate-90" />
  </span>
  <span class="tracking-[2px]">Contact Us</span>
</button>


<!-- Modal -->
<div
  id="contact-modal"
  class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 hidden z-50"
>
  <div class="bg-white rounded-xl shadow-lg w-3/4 md:w-1/2 lg:w-1/3">
    <!-- Get in Touch Form -->
    <div class="">
      <div
        class="flex rounded-tl-xl rounded-tr-xl p-6 justify-between items-center bg-gradient-to-b from-[#FEFEFE] to-[#E8E8E8]"
      >
        <div class="text-xl font-bold text-[#31393C]">Get in Touch</div>

        <button
          id="cancel-button"
          class="flex items-center"
          onclick="closeModal()"
        >
          <Image src={cancle} alt="cancel-icon" />
        </button>
      </div>
      <form class="p-6" id="contactpop_form">
        <!-- Name Field -->
        <div class="mb-4">
          <input
            placeholder="Name *"
            type="text"
            id="c_name"
            name="c_name"
            required
            class="mt-1 p-2 w-full border border-gray-300 rounded focus:outline-none focus:ring focus:ring-blue-300"
          />
        </div>

        <!-- Email Field -->
        <div class="mb-4">
          <input
            placeholder="Email *"
            type="email"
            id="c_email"
            name="c_email"
            required
            class="mt-1 p-2 w-full border border-gray-300 rounded focus:outline-none focus:ring focus:ring-blue-300"
          />
        </div>

        <!-- Phone Number Field -->
        <div class="mb-4">
          <input
            placeholder="Phone Number"
            type="tel"
            id="c_phone"
            name="c_phone"
            class="mt-1 p-2 w-full border border-gray-300 rounded focus:outline-none focus:ring focus:ring-blue-300"
          />
        </div>

        <!-- Description Field -->
        <div class="mb-4">
          <textarea
            placeholder="Describe Your Requirements *"
            id="c_requirements"
            name="c_requirements"
            required
            class="mt-1 p-2 w-full border border-gray-300 rounded focus:outline-none focus:ring focus:ring-blue-300"
            rows="4"></textarea>
        </div>

        <div class="flex flex-col 2xl:flex-row gap-4 justify-between">
          <!-- "I'm not a robot" Checkbox -->
          <!-- <div class="2xl:w-[200px]">
            <p
              class="g-recaptcha"
              data-sitekey="6LcaYFkoAAAAALjdnrEgCky1D169PguZyJtPRC54"
            >
            </p>
            <p
              id="c_recaptcha-error"
              class="input-file input-file text-xs -mt-2 lg:-mt-4"
            >
              Please complete the reCAPTCHA verification.
            </p>
          </div> -->

          <!-- Submit Button -->
          <div>
            <button
              type="submit"
              class="w-full 2xl:w-[200px] bg-blue-500 text-white font-bold py-3 rounded hover:bg-blue-600 focus:outline-none focus:ring focus:ring-blue-300"
            >
              SUBMIT
            </button>
          </div>
        </div>
      </form>
    </div>
  </div>
</div>

<style>
  #c_recaptcha-error {
    color: red;
    font-size: 14px; /* Adjust the font size to your preference */
    display: none;
  }

  .g-recaptcha {
    transform: scale(0.77);
    -webkit-transform: scale(0.77);
    transform-origin: 0 0;
    -webkit-transform-origin: 0 0;
    margin-bottom: -1rem;
  }
  @media screen and (max-width: 280px) {
    .g-recaptcha {
      transform: scale(0.6);
      -webkit-transform: scale(0.48);
      margin-bottom: -2rem;
      margin-right: -5rem;
    }
  }
  @media (min-width: 281px) and (max-width: 375px) {
    .g-recaptcha {
      transform: scale(0.6);
      -webkit-transform: scale(0.5);
      margin-bottom: -2rem;
      margin-right: -3rem;
    }
  }
</style>

<script>
  // let current_url;
  // // Event handler function to log the current URL
  // function logCurrentUrl() {
  //   // Get the current pathname and remove the leading '/'
  //   current_url = window.location.pathname.slice(1);
  //   console.log("Current URL:" + current_url);
  // }

  const urlParams = new URLSearchParams(window.location.search);

// Get the value of the 'page' parameter
const pageValue = urlParams.get("page");
const demoForValue = pageValue || "";

const queryTypeValue = pageValue ? "Demo" : "General";
  // Add event listener to the button
  // document.addEventListener("DOMContentLoaded", function () {
  //   const contactButton = document.getElementById("contact-button");
  //   if (contactButton) {
  //     contactButton.addEventListener("click", logCurrentUrl);
  //   }
  // });

  // Function to open the modal
  document.querySelector("#contact-button").addEventListener("click", () => {
    document.querySelector("#contact-modal").classList.remove("hidden");
  });

  // Event handler to close the modal
  function closeModal() {
    // Hide the modal
    const modal = document.getElementById("contact-modal");
    if (modal) {
      modal.classList.add("hidden");
    }

    // Re-enable body scroll
    document.body.style.overflow = "auto";
  }

  // Add event listener to the cancel button (the cancel image)
  document
    .querySelector("#cancel-button")
    .addEventListener("click", closeModal);

  // add event listner to form
  var form = document.getElementById("contactpop_form");
  form.addEventListener("submit", handleContactPopForm);

  // Add event listener to email input for real-time validation
  var emailInput = document.querySelector('input[id="c_email"]');
  emailInput.addEventListener("blur", validateEmailInput); // Changed event to "blur"


  function validateEmailInput() {
     
     const emailValue = emailInput.value.trim();
     
     const errorMessageElement = emailInput.nextElementSibling;
     

     if (emailValue === "") {
       hideErrorMessage(errorMessageElement); // Hide error message if email is empty
       emailInput.style.borderColor = ""; // Reset border color
       return;
     }

     if (!validateEmail(emailValue)) {
       blinkBorder(emailInput);
       displayErrorMessage(
           errorMessageElement,
           "Please enter a valid email address.",
           emailInput
         );
     } else {
       hideErrorMessage(errorMessageElement); // Hide error message if email is valid
       emailInput.style.borderColor = ""; // Reset border color
     }
   }

  // Add event listener to email input for real-time validation
  var nameInput = document.querySelector('input[id="c_name"]');
  nameInput.addEventListener("blur", validateNameInput); // Changed event to "blur"

  function validateNameInput() {
     
     const nameValue = nameInput.value.trim();
     
     const errorMessageElement = nameInput.nextElementSibling;
     

     if (nameValue === "") {
       hideErrorMessage(errorMessageElement); // Hide error message if email is empty
       nameInput.style.borderColor = ""; // Reset border color
       return;
     }

     if (!validateName(nameValue)) {
       blinkBorder(nameInput);
       displayErrorMessage(
           errorMessageElement,
           "Please enter a valid name.",
           nameInput
         );
     } else {
       hideErrorMessage(errorMessageElement); // Hide error message if email is valid
       nameInput.style.borderColor = ""; // Reset border color
     }
   }


  const apiKey = import.meta.env.PUBLIC_ApiKey as string;
  const secretKey = import.meta.env.PUBLIC_SecretKey as string;

  function blinkBorder(element) {
    let isRed = false;

    element.style.borderColor = "red";
  }

  function resetBorderColorOnFocus(inputElement) {
    inputElement.addEventListener("focus", () => {
      inputElement.style.borderColor = ""; // Remove the border color (set it to null)
    });
  }

  // send data in frappe
  function handleContactPopForm(e) {
    e.preventDefault();

    // var response = grecaptcha.getResponse();
    // console.log("response", response);
    // if (response.length === 0) {
    //   document.getElementById("c_recaptcha-error").style.display = "block";
    //   return;
    // } 
    //   document.getElementById("c_recaptcha-error").style.display = "none";

    //   const recaptchaResponse = grecaptcha.getResponse();
    //   // If the reCAPTCHA is filled out, clear any previous error message
    //   clearRecaptchaError();

    //   function clearRecaptchaError() {
    //   const recaptchaErrorElement = document.getElementById("c_recaptcha-error");
    //   recaptchaErrorElement.style.display = "none"; // Hide the error message
    // }
    

    const firstNameInput = document.querySelector('input[id="c_name"]');
    const emailInput = document.querySelector('input[id="c_email"]');
    const messageInput = document.querySelector(
      'textarea[name="c_requirements"]'
    );
    const phoneInput = document.querySelector('input[id="c_phone"]');

    const nameValue = firstNameInput.value.trim();
    const emailValue = emailInput.value.trim();
    const messageValue = messageInput.value.trim();
    const phoneValue = phoneInput.value.trim();

    resetBorderColorOnFocus(firstNameInput);
    resetBorderColorOnFocus(emailInput);
    resetBorderColorOnFocus(messageInput);
    resetBorderColorOnFocus(phoneInput);

    if (nameValue === "") {
      blinkBorder(firstNameInput);
    }

    if (emailValue === "" || !validateEmail(emailValue)) {
      displayErrorMessage(
        emailInput.nextElementSibling,
        "Please enter a valid email address.",
        emailInput
      );
    }

    if (messageValue === "") {
      blinkBorder(messageInput);
    }

    // if (!recaptchaResponse || recaptchaResponse.length === 1) {
    //   showRecaptchaError();
    //   return;
    // }

    if (nameValue === "" || emailValue === "" || messageValue === "") {
      return;
    }

    const urlParams = new URLSearchParams(window.location.search);

    // Get the value of the 'page' parameter
    const pageValue = urlParams.get("page");

    const queryTypeValue = pageValue ? "Demo" : "General";
    console.log("queryTypeValue-----------",queryTypeValue);
    // alert('Please select a file to upload.');
    const formData = new FormData(e.target);
    const data = Object.fromEntries(formData.entries());
    formData.set("data", JSON.stringify(data));
    var name = data.c_name;
    var email = data.c_email;     
    var phone = data.c_phone;
    var requirements = data.c_requirements;

    getUserIPAddress().then((ipAddress) => {
      let { browserName, device } = detectBrowser();

      if(validateEmail(emailValue) && validateName(nameValue)){
      fetch("https://sanskar.frappe.cloud/api/resource/Enquiry", {
        method: "POST",
        headers: {
          Accept: "application/json",
          "Content-Type": "application/json",
          Authorization: `token ${apiKey}:${secretKey}`,
        },
        body: JSON.stringify({
          first_name: name,
          email: email,
          phone: phone,
          message: requirements,
          enquiry_source: "Website Enquiry",
          demo_for: demoForValue,
          query_type: queryTypeValue,
          ip: ipAddress,
          browser_name: browserName,
          device: device,
          website_page_name: "Contact Pop Up",
        }),
      })
        .then((res) => {
          if (res.status === 200) {
            window.location.href = "/thank-you";
          } else {
            console.log("failed to post form", res);
            sendEmailNotification(
              name,
              email,
              phone,
              requirements,
              "Website Enquiry",
              demoForValue,
              queryTypeValue,
              ipAddress,
              browserName,
              device,
              "Contact Pop Up",
              res
            );
            alert("Failed to submit data. Please try after some time.");
          }
        })
        .catch((error) => {
          console.log(error);
        });
      }
    });

    // return;
  }

  // Validation function for email
  function validateEmail(email) {
    const re =
      /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return re.test(String(email).toLowerCase());
  }

  function validateName(name){
      const re =
       /^(?=(?:[^A-Za-z]*[A-Za-z]){2})(?![^\d~`?!^*¨ˆ;@=$%{}\[\]|\\\/<>#“.,]*[\d~`?!^*¨ˆ;@=$%{}\[\]|\\\/<>#“.,])\S+(?: \S+){0,2}$/;

      return re.test(String(name).toLowerCase());
    }

    function displayErrorMessage(errorMessageElement, message, inputField) {
  if (!errorMessageElement || !errorMessageElement.classList.contains("error-message")) {
    // If error message doesn't exist, create and insert it
    errorMessageElement = document.createElement("p");
    errorMessageElement.textContent = message;
    errorMessageElement.classList.add("error-message");
    errorMessageElement.style.color = "red"; // Adjust the color
    errorMessageElement.style.fontSize = "0.8rem"; // Adjust the font size
    errorMessageElement.style.marginTop = "0.2rem"; // Adjust the margin-top
    errorMessageElement.style.marginBottom = "0"; // Remove bottom margin

    // Insert the error message after the input field
    inputField.parentNode.insertBefore(
      errorMessageElement,
      inputField.nextSibling
    );
  } else {
    errorMessageElement.textContent = message; // Update existing error message
  }
}

  function hideErrorMessage(errorMessageElement) {
    if (
      errorMessageElement &&
      errorMessageElement.classList.contains("error-message")
    ) {
      // If error message exists, remove it
      errorMessageElement.remove();
    }
  }

  // function showRecaptchaError() {
  //   const recaptchaErrorElement = document.getElementById("c_recaptcha-error");
  //   recaptchaErrorElement.style.display = "block"; // Display the error message

  //   // Hide the error message after a specific duration (e.g., 5 seconds)
  //   setTimeout(function () {
  //     recaptchaErrorElement.style.display = "none";
  //   }, 3000);
  // }

  // function clearRecaptchaError() {
  //   const recaptchaErrorElement = document.getElementById("c_recaptcha-error");
  //   recaptchaErrorElement.style.display = "none"; // Hide the error message
  // }

  // Event handler to open the modal
  function openModal() {
    // Show the modal
    const modal = document.getElementById("contact-modal");
    if (modal) {
      modal.classList.remove("hidden");
    }

    // Disable body scroll
    document.body.style.overflow = "hidden";
  }

  // Add event listener on DOMContentLoaded to ensure the document is ready
  document.addEventListener("DOMContentLoaded", function () {
    // Add event listener to the Contact Us button
    const contactButton = document.getElementById("contact-button");
    if (contactButton) {
      contactButton.addEventListener("click", function () {
        logCurrentUrl();
        openModal();
      });
    }

    // Add event listener to the cancel button
    const cancelButton = document.getElementById("cancel-button");
    if (cancelButton) {
      cancelButton.addEventListener("click", closeModal);
    }
  });

  // get browser and device name
  function detectBrowser() {
    const userAgent = navigator.userAgent;
    var browserName = "Unknown";

    // Check for Chrome
    if (userAgent.indexOf("Chrome") !== -1) {
      browserName = "Google Chrome";
    }
    // Check for Firefox
    else if (userAgent.indexOf("Firefox") !== -1) {
      browserName = "Mozilla Firefox";
    }
    // Check for Safari
    else if (userAgent.indexOf("Safari") !== -1) {
      browserName = "Apple Safari";
    }
    // Check for Edge
    else if (userAgent.indexOf("Edg") !== -1) {
      browserName = "Microsoft Edge";
    }
    // Check for Internet Explorer
    else if (
      userAgent.indexOf("MSIE") !== -1 ||
      userAgent.indexOf("Trident") !== -1
    ) {
      browserName = "Internet Explorer";
    }

    // Log the detected browser to the console
    //   console.log(`Detected browser: ${browserName}`);

    // Detect the device type based on screen size
    const screenWidth = window.innerWidth;
    var device = "Unknown";
    if (screenWidth <= 576) {
      device = "Mobile";
    } else if (screenWidth <= 992) {
      device = "Tablet";
    } else if (screenWidth <= 1200) {
      device = "Laptop";
    } else {
      device = "Desktop";
    }

    return { browserName, device };
  }

  // Function to get the user's IP address using ipify
  function getUserIPAddress() {
    return fetch("https://api.ipify.org?format=json")
      .then((response) => response.json())
      .then((data) => data.ip)
      .catch((error) => {
        console.error("Error fetching IP address:", error);
        return null; // Handle the error gracefully
      });
  }

  function sendEmailNotification(
    name = "",
    email = "",
    phone = "",
    message = "",
    enquiry_source = "",
    demoForValue = "",
    queryTypeValue = "",
    ip = "",
    browser_name = "",
    device = "",
    response = ""
  ) {
    console.log("sending email notification...");
    // return
    fetch(
      "https://sanskartechnolab.com/api/method/astro_sanskar.api.send_form_failed_notification",
      {
        method: "POST",
        headers: {
          Accept: "application/json",
          "Content-Type": "application/json",
          // Authorization: `token ${apiKey}:${secretKey}`,
        },
        body: JSON.stringify({
          full_name: name,
          email: email,
          phone: phone,
          message: message,
          enquiry_source: "Website Enquiry",
          demoForValue: demoForValue,
          queryTypeValue: queryTypeValue,
          ip: ip,
          browser_name: browser_name,
          device: device,
          response: response,
          page_name: "Contact Us PopUp",
        }),
      }
    )
      .then((res) => {
        if (res.status === 200) {
          // alert("You have been registered successfully.")
          console.log("email notification sent.");
        } else {
          console.log("failed to send email notification", res);
          alert(
            "We are unable to process your request. please send your requirements on info@sanskartechnolab.com"
          );
        }
      })
      .catch((error) => {
        console.log("error", error);
      });
  }
</script>
